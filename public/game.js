// Generated by CoffeeScript 1.4.0
var actions, map, objects, pointAdd, slime, slimeSha, tileset;

$("<div id='tiles'>").appendTo("body");

slimeSha = "20f9b8cd931474b4db69191149d304439f368d64";

slime = {
  position: [4, 2, 1],
  image: Resource.imageFor(slimeSha),
  yOffset: 0,
  draw: function(canvas, x, y) {
    return canvas.drawImage(this.image, x + 16, y + 32 - this.yOffset);
  },
  move: function(delta) {
    var newPosition, onTile, tile;
    onTile = map.tileAt.apply(map, this.position);
    if (onTile && onTile.stairs) {
      delta.z += 1;
    }
    newPosition = pointAdd(this.position, delta);
    if (map.isClear.apply(map, newPosition)) {
      this.position = newPosition;
    }
    if (tile = map.tileAt.apply(map, this.position)) {
      return this.yOffset = tile.yOffset;
    } else {
      return this.yOffset = 0;
    }
  },
  fall: function() {
    var onTile;
    onTile = map.tileAt.apply(map, this.position);
    if (onTile && onTile.surface) {

    } else {
      this.move([0, 0, -1]);
      this.move([0, 0, -1]);
      this.move([0, 0, -1]);
      this.move([0, 0, -1]);
    }
    if (this.position.z < 0) {
      return this.position.z = 0;
    }
  }
};

objects = [slime];

map = Map(function(x, y, z, tile) {
  var inCell;
  inCell = objects.select(function(object) {
    return object.position.x === x && object.position.y === y && object.position.z === z;
  });
  return inCell.each(function(object) {
    return map.drawCell(object, x, y, z);
  });
});

tileset = Tileset(function() {
  tileset.render();
  return map.tiles(tileset.tiles());
});

setInterval(function() {
  return map.render();
}, 100);

pointAdd = function(p1, p2) {
  return [p1.x + p2.x, p1.y + p2.y, p1.z + p2.z];
};

actions = {
  up: function() {
    slime.move([0, 1, 0]);
    return slime.fall();
  },
  down: function() {
    slime.move([0, -1, 0]);
    return slime.fall();
  },
  left: function() {
    slime.move([-1, 0, 0]);
    return slime.fall();
  },
  right: function() {
    slime.move([1, 0, 0]);
    return slime.fall();
  }
};

UI.actions(actions);
