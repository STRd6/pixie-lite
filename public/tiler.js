// Generated by CoffeeScript 1.6.3
var activeTile, layersElement, map, refreshLayers, tileset;

UI.buttons({
  Save: function() {
    tileset.save();
    return map.saveLayerData();
  }
});

$("<div id='tiles'>").appendTo("body");

$("<div id='preview'>").appendTo("body");

layersElement = $("<div id='layers'>").appendTo("body");

8..times(function() {
  return layersElement.append("<textarea>");
});

map = Map();

tileset = Tileset({
  loaded: function() {
    tileset.render();
    return map.tiles(tileset.tiles());
  }
});

activeTile = null;

refreshLayers = function() {
  var data;
  data = $("#layers textarea").map(function() {
    return $(this).val();
  }).get();
  return map.loadLayers(data);
};

$(document).on({
  keyup: refreshLayers,
  blur: refreshLayers
}, "#layers textarea");

$(document).on({
  mousedown: function(e) {
    activeTile = tileset.get($(this).index());
    $("#props").val(Util.toCSON(activeTile));
    $("#preview .tiledata").remove();
    $("#preview").append(HAML.tiledata(activeTile.present()));
    return false;
  }
}, "#tiles img");

$(document).on({
  mousemove: function(e) {
    return map.mousePosition(localPosition(e));
  }
}, "#map");

$("<textarea id='props'>").appendTo("#preview");

$("#props").on({
  blur: function() {
    var code, data, val;
    val = $(this).val();
    code = CoffeeScript.compile(val, {
      bare: true
    });
    data = eval(code);
    Object.extend(activeTile, data);
    $("#preview .tiledata").remove();
    return $("#preview").append(HAML.tiledata(activeTile.present()));
  }
});

UI.actions({
  "[": function() {
    return map.changeCameraAngle((-1 / 4).turns);
  },
  "]": function() {
    return map.changeCameraAngle((+1 / 4).turns);
  },
  "up": function() {
    return map.changeTopLayer(+1);
  },
  "down": function() {
    return map.changeTopLayer(-1);
  }
});

setInterval(function() {
  return map.render();
}, 33);
